exports.id=624,exports.ids=[624],exports.modules={641:(e,n,t)=>{t.d(n,{GitCodeLensProvider:()=>GitCodeLensProvider});var i=t(1398),o=t(1681),s=t(1518),r=t(3096),a=t(3949),l=t(4301),c=t(1078),u=t(6612),d=t(4465),m=t(7747),g=t(7005),h=t(5419),y=t(3934),b=(e,n)=>(n=Symbol[e])?n:Symbol.for("Symbol."+e),p=e=>{throw TypeError(e)},C=(e,n,t)=>{if(null!=n){var i,o;"object"!=typeof n&&"function"!=typeof n&&p("Object expected"),t&&(i=n[b("asyncDispose")]),void 0===i&&(i=n[b("dispose")],t&&(o=i)),"function"!=typeof i&&p("Object not disposable"),o&&(i=function(){try{o.call(this)}catch(e){return Promise.reject(e)}}),e.push([t,i,n])}else t&&e.push([t]);return n},f=(e,n,t)=>{var i="function"==typeof SuppressedError?SuppressedError:function(e,n,t,i){return(i=Error(t)).name="SuppressedError",i.error=e,i.suppressed=n,i},o=e=>n=t?new i(e,n,"An error was suppressed during disposal"):(t=!0,e),s=i=>{for(;i=e.pop();)try{var r=i[1]&&i[1].call(i[2]);if(i[0])return Promise.resolve(r).then(s,e=>(o(e),s()))}catch(e){o(e)}if(t)throw n};return s()};let GitRecentChangeCodeLens=class GitRecentChangeCodeLens extends i.CodeLens{constructor(e,n,t,i,o,s,r,a,l,c){super(a,c),this.languageId=e,this.symbol=n,this.uri=t,this.dateFormat=i,this.blame=o,this.blameRange=s,this.isFullRange=r,this.desiredCommand=l}getBlame(){return this.blame?.()}};let GitAuthorsCodeLens=class GitAuthorsCodeLens extends i.CodeLens{constructor(e,n,t,i,o,s,r,a){super(r),this.languageId=e,this.symbol=n,this.uri=t,this.blame=i,this.blameRange=o,this.isFullRange=s,this.desiredCommand=a}getBlame(){return this.blame()}};let GitCodeLensProvider=class GitCodeLensProvider{constructor(e){this.container=e}static selector=[...(0,m.Tj)(s.MV,e=>({scheme:e}))];_onDidChangeCodeLenses=new i.EventEmitter;get onDidChangeCodeLenses(){return this._onDidChangeCodeLenses.event}dispose(){this._onDidChangeCodeLenses.dispose()}reset(){this._onDidChangeCodeLenses.fire()}async provideCodeLenses(e,n){var t=[];try{let o,s;if(e.isDirty&&(0,u.QK)(e.uri))return[];let r=C(t,(0,h.bP)(`${(0,g.zu)(this)}.provideCodeLenses(${g.Vy.toLoggable(e)})`,!1)),a=await this.container.documentTracker.getOrAdd(e),m=await a.getStatus();if(!m.blameable)return[];let y=!1;e.isDirty&&!m.dirtyIdle&&(y=!0);let b=c.H.get("codeLens",e),p={...b.scopesByLanguage?.find(n=>n.language?.toLowerCase()===e.languageId)};null==p&&(p={language:e.languageId}),null==p.scopes&&(p.scopes=b.scopes),null==p.symbolScopes&&(p.symbolScopes=b.symbolScopes),p.symbolScopes=null!=p.symbolScopes?p.symbolScopes=p.symbolScopes.map(e=>e.toLowerCase()):[];let f=[],S=a.uri;if(y){if(1!==p.scopes.length||!p.scopes.includes("document")){let n;if([n,s]=await Promise.all([this.container.git.isTracked(S),(0,l.S4)("vscode.executeDocumentSymbolProvider",e.uri)]),!n)return f}}else if(n.isCancellationRequested||(1===p.scopes.length&&p.scopes.includes("document")?o=await this.container.git.getBlame(S,e):[o,s]=await Promise.all([this.container.git.getBlame(S,e),(0,l.S4)("vscode.executeDocumentSymbolProvider",e.uri)]),null==o||o?.lines.length===0))return f;if(n.isCancellationRequested)return f;let v=(0,d.Oo)(()=>e.validateRange(new i.Range(0,0,1e6,1e6))),w=y?{command:void 0,title:this.getDirtyTitle(b)}:void 0;if(void 0!==s)for(let n of(g.Vy.log(r,`${s.length} symbol(s) found`),s))this.provideCodeLens(f,e,n,p,v,o,S,b,y,w);if((p.scopes.includes("document")||p.symbolScopes.includes("file"))&&!p.symbolScopes.includes("!file")&&null==f.find(e=>0===e.range.start.line&&0===e.range.end.line)){let n;let t=v();if(y||b.recentChange.enabled){y||(n=(0,d.Oo)(()=>this.container.git.getBlameRange(o,S,t)));let s=new i.SymbolInformation(S.fileName,i.SymbolKind.File,"",new i.Location(S.documentUri(),new i.Range(0,0,0,t.start.character)));f.push(new GitRecentChangeCodeLens(e.languageId,s,S,b.dateFormat,n,t,!0,I(s),b.recentChange.command,w))}if(!y&&b.authors.enabled){void 0===n&&(n=(0,d.Oo)(()=>this.container.git.getBlameRange(o,S,t)));let s=new i.SymbolInformation(S.fileName,i.SymbolKind.File,"",new i.Location(S.documentUri(),new i.Range(0,1,0,t.start.character)));f.push(new GitAuthorsCodeLens(e.languageId,s,S,n,t,!0,I(s),b.authors.command))}}return f}catch(e){var o=e,s=!0}finally{f(t,o,s)}}getValidateSymbolRange(e,n,t,o){let s,r=!1,a=i.SymbolKind[e.kind].toLowerCase();switch(e.kind){case i.SymbolKind.File:(n.scopes.includes("containers")||n.symbolScopes.includes(a))&&(r=!n.symbolScopes.includes(`!${a}`)),r&&(s=t());break;case i.SymbolKind.Package:(n.scopes.includes("containers")||n.symbolScopes.includes(a))&&(r=!n.symbolScopes.includes(`!${a}`)),r&&0===(s=I(e)).start.line&&0===s.end.line&&(s=t());break;case i.SymbolKind.Class:case i.SymbolKind.Interface:case i.SymbolKind.Module:case i.SymbolKind.Namespace:case i.SymbolKind.Struct:(n.scopes.includes("containers")||n.symbolScopes.includes(a))&&(s=I(e),r=!n.symbolScopes.includes(`!${a}`)&&(o||!s.isSingleLine));break;case i.SymbolKind.Constructor:case i.SymbolKind.Enum:case i.SymbolKind.Function:case i.SymbolKind.Method:case i.SymbolKind.Property:(n.scopes.includes("blocks")||n.symbolScopes.includes(a))&&(s=I(e),r=!n.symbolScopes.includes(`!${a}`)&&(o||!s.isSingleLine));break;case i.SymbolKind.String:(n.symbolScopes.includes(a)||"markdown"===n.language&&n.scopes.includes("containers"))&&(s=I(e),r=!n.symbolScopes.includes(`!${a}`)&&(o||!s.isSingleLine));break;default:n.symbolScopes.includes(a)&&(s=I(e),r=!n.symbolScopes.includes(`!${a}`)&&(o||!s.isSingleLine))}return r?s??I(e):void 0}provideCodeLens(e,n,t,o,s,r,a,l,c,u){try{let m;let g=this.getValidateSymbolRange(t,o,s,l.includeSingleLineSymbols);if(void 0===g)return;let h=n.lineAt(I(t).start);if(e.length&&e[e.length-1].range.start.line===h.lineNumber)return;let y=0;if((c||l.recentChange.enabled)&&(c||(m=(0,d.Oo)(()=>this.container.git.getBlameRange(r,a,g))),e.push(new GitRecentChangeCodeLens(n.languageId,t,a,l.dateFormat,m,g,!1,h.range.with(new i.Position(h.range.start.line,y)),l.recentChange.command,u)),y++),l.authors.enabled){let o=!g.isSingleLine;if(!o&&"csharp"===n.languageId)switch(t.kind){case i.SymbolKind.File:break;case i.SymbolKind.Package:case i.SymbolKind.Module:case i.SymbolKind.Namespace:case i.SymbolKind.Class:case i.SymbolKind.Interface:case i.SymbolKind.Constructor:case i.SymbolKind.Method:case i.SymbolKind.Function:case i.SymbolKind.Enum:o=!0}o&&!c&&(void 0===m&&(m=(0,d.Oo)(()=>this.container.git.getBlameRange(r,a,g))),e.push(new GitAuthorsCodeLens(n.languageId,t,a,m,g,!1,h.range.with(new i.Position(h.range.start.line,y)),l.authors.command)))}}finally{if(U(t))for(let i of t.children)this.provideCodeLens(e,n,i,o,s,r,a,l,c,u)}}resolveCodeLens(e,n){return e instanceof GitRecentChangeCodeLens?this.resolveGitRecentChangeCodeLens(e,n):e instanceof GitAuthorsCodeLens?this.resolveGitAuthorsCodeLens(e,n):Promise.reject(void 0)}resolveGitRecentChangeCodeLens(e,n){let t=e.getBlame();if(null==t)return D("Unknown, (Blame failed)",e);let s=(0,m.$1)(t.commits.values());if(null==s)return D("Unknown, (Blame failed)",e);let r=`${s.author.name}, ${null==e.dateFormat?s.formattedDate:s.formatDate(e.dateFormat)}`;if(c.H.get("debug")&&(r+=` [${e.languageId}: ${i.SymbolKind[e.symbol.kind]}(${e.range.start.character}-${e.range.end.character}${e.symbol.containerName?`|${e.symbol.containerName}`:""}), Lines (${e.blameRange.start.line+1}-${e.blameRange.end.line+1}), Commit (${s.shortSha})]`),!1===e.desiredCommand)return D(r,e);switch(e.desiredCommand){case o.Vg.CopyRemoteCommitUrl:return v(r,e,s,!0);case o.Vg.CopyRemoteFileUrl:return w(r,e,s,!0);case o.Vg.DiffWithPrevious:return S(r,e,s);case o.Vg.OpenCommitOnRemote:return v(r,e,s);case o.Vg.OpenFileOnRemote:return w(r,e,s);case o.Vg.RevealCommitInView:return L(r,e,s);case o.Vg.ShowCommitsInView:return V(r,e,t,s);case o.Vg.ShowQuickCommitDetails:return F(r,e,s);case o.Vg.ShowQuickCommitFileDetails:return R(r,e,s);case o.Vg.ShowQuickCurrentBranchHistory:return $(r,e);case o.Vg.ShowQuickFileHistory:return k(r,e);case o.Vg.ToggleFileBlame:return K(r,e);case o.Vg.ToggleFileChanges:return P(r,e,s);case o.Vg.ToggleFileChangesOnly:return P(r,e,s,!0);case o.Vg.ToggleFileHeatmap:return O(r,e);default:return e}}resolveGitAuthorsCodeLens(e,n){let t=e.getBlame();if(null==t)return D("? authors (Blame failed)",e);let s=t.authors.size,r=m.$1(t.authors.values())?.name??"Unknown",a=s>1?` and ${(0,y.td)("one other",s-1,{only:!0,plural:"others"})}`:"",l=`${(0,y.td)("author",s,{zero:"?"})} (${r}${a})`;if(c.H.get("debug")&&(l+=` [${e.languageId}: ${i.SymbolKind[e.symbol.kind]}(${e.range.start.character}-${e.range.end.character}${e.symbol.containerName?`|${e.symbol.containerName}`:""}), Lines (${e.blameRange.start.line+1}-${e.blameRange.end.line+1}), Authors (${(0,m.fj)((0,m.Tj)(t.authors.values(),e=>e.name),", ")})]`),!1===e.desiredCommand)return D(l,e);let u=(0,m.I6)(t.commits.values(),e=>e.author.name===r)??(0,m.$1)(t.commits.values());if(null==u)return D(l,e);switch(e.desiredCommand){case o.Vg.CopyRemoteCommitUrl:return v(l,e,u,!0);case o.Vg.CopyRemoteFileUrl:return w(l,e,u,!0);case o.Vg.DiffWithPrevious:return S(l,e,u);case o.Vg.OpenCommitOnRemote:return v(l,e,u);case o.Vg.OpenFileOnRemote:return w(l,e,u);case o.Vg.RevealCommitInView:return L(l,e,u);case o.Vg.ShowCommitsInView:return V(l,e,t);case o.Vg.ShowQuickCommitDetails:return F(l,e,u);case o.Vg.ShowQuickCommitFileDetails:return R(l,e,u);case o.Vg.ShowQuickCurrentBranchHistory:return $(l,e);case o.Vg.ShowQuickFileHistory:return k(l,e);case o.Vg.ToggleFileBlame:return K(l,e);case o.Vg.ToggleFileChanges:return P(l,e,u);case o.Vg.ToggleFileChangesOnly:return P(l,e,u,!0);case o.Vg.ToggleFileHeatmap:return O(l,e);default:return e}}getDirtyTitle(e){return e.recentChange.enabled&&e.authors.enabled?c.H.get("strings.codeLens.unsavedChanges.recentChangeAndAuthors"):e.recentChange.enabled?c.H.get("strings.codeLens.unsavedChanges.recentChangeOnly"):c.H.get("strings.codeLens.unsavedChanges.authorsOnly")}};function S(e,n,t){return n.command=(0,l.gu)(r.d.DiffWithPrevious,e,void 0,{commit:t,uri:n.uri.toFileUri()}),n}function v(e,n,t,i=!1){return n.command=(0,l.gu)(r.d.OpenOnRemote,e,{resource:{type:a.J.Commit,sha:t.sha},repoPath:t.repoPath,clipboard:i}),n}function w(e,n,t,i=!1){return n.command=(0,l.gu)(r.d.OpenOnRemote,e,{resource:{type:a.J.Revision,fileName:t.file?.path??"",sha:t.sha},repoPath:t.repoPath,clipboard:i}),n}function L(e,n,t){return n.command=(0,l.gu)(t?.isUncommitted?"":o.Vg.RevealCommitInView,e,n.uri.toFileUri(),{commit:t,sha:void 0===t?void 0:t.sha}),n}function V(e,n,t,i){let o;return o=void 0===i?[...(0,m.x1)(t.commits.values(),e=>e.isUncommitted?void 0:e.ref)]:[i.ref],n.command=(0,l.gu)(0===o.length?"":r.d.ShowCommitsInView,e,{repoPath:t.repoPath,refs:o}),n}function F(e,n,t){return n.command=(0,l.gu)(t?.isUncommitted?"":o.Vg.ShowQuickCommitDetails,e,n.uri.toFileUri(),{commit:t,sha:void 0===t?void 0:t.sha}),n}function R(e,n,t){return n.command=(0,l.gu)(t?.isUncommitted?"":o.Vg.ShowQuickCommitFileDetails,e,n.uri.toFileUri(),{commit:t,sha:void 0===t?void 0:t.sha}),n}function $(e,n){return n.command=(0,l.gu)(o.Vg.ShowQuickCurrentBranchHistory,e,n.uri.toFileUri()),n}function k(e,n){return n.command=(0,l.gu)(o.Vg.ShowQuickFileHistory,e,n.uri.toFileUri(),{range:n.isFullRange?void 0:n.blameRange}),n}function K(e,n){return n.command=(0,l.gu)("gitlens.toggleFileBlame",e,n.uri.toFileUri()),n}function P(e,n,t,i){return n.command=(0,l.gu)("gitlens.toggleFileChanges",e,n.uri.toFileUri(),{type:"changes",context:{sha:t.sha,only:i,selection:!1}}),n}function O(e,n){return n.command=(0,l.gu)("gitlens.toggleFileHeatmap",e,n.uri.toFileUri()),n}function D(e,n){return n.command={title:e,command:""},n}function I(e){return U(e)?e.range:e.location.range}function U(e){return(0,d.is)(e,"children")}}};