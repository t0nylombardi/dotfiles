# ========================
# 🛠  PATH CONFIGURATION
# ========================
# If you come from bash, you might have to change your $PATH.
export PATH="$HOME/bin:$HOME/.local/bin:/usr/local/bin:$PATH"

# ========================
# 🎨 THEMING
# ========================
export ZSH="$HOME/.oh-my-zsh"
eval "$(oh-my-posh init zsh --config ~/.config/ohmyposh/catppuccin.omp.json)"

# ========================
# ⚡ ZINIT (Plugin Manager)
# ========================
ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"
[ ! -d "$ZINIT_HOME" ] && mkdir -p "$(dirname "$ZINIT_HOME")"
[ ! -d "$ZINIT_HOME/.git" ] && git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
source "${ZINIT_HOME}/zinit.zsh"
zinit light ajeetdsouza/zoxide
eval "$(zoxide init zsh)"

# ========================
# 🔄 FIX OMZP PLUGIN CLONING (Workaround for Zinit issue #504)
# ========================
_fix-omz-plugin() {
  if [[ ! -f ._zinit/teleid ]]; then return 0; fi
  if [[ ! $(cat ._zinit/teleid) =~ "^OMZP::.*" ]]; then return 0; fi
  local OMZP_NAME
  OMZP_NAME=$(sed -n 's/OMZP:://p' ._zinit/teleid)

  git clone --quiet --no-checkout --depth=1 --filter=tree:0 https://github.com/ohmyzsh/ohmyzsh
  cd ohmyzsh || return
  git sparse-checkout set --no-cone plugins/$OMZP_NAME
  git checkout --quiet
  cd ..

  local OMZP_PATH="ohmyzsh/plugins/$OMZP_NAME"
  for file in $(ls -A "$OMZP_PATH"); do
    [[ "$file" =~ ^(\.|\.\.|README\.md|\.gitignore|$OMZP_NAME\.plugin\.zsh)$ ]] && continue
    cp "$OMZP_PATH/$file" "$file"
  done

  rm -rf ohmyzsh
}

# ========================
# 🔌 ZINIT PLUGIN CONFIGURATION
# ========================
local_plugins=(aliases bundler common-aliases docker docker-compose git github)

zinit wait lucid for \
  atinit"ZINIT[COMPINIT_OPTS]=-C; zicompinit; zicdreplay" \
    zdharma-continuum/fast-syntax-highlighting \
  blockf \
    zsh-users/zsh-completions \
  atload"!_zsh_autosuggest_start" \
    zsh-users/zsh-autosuggestions

for plugin in "${local_plugins[@]}"; do
  plugin_path="$ZSH/plugins/$plugin/$plugin.plugin.zsh"

  if [[ -f "$plugin_path" ]]; then
    zinit snippet "$plugin_path"
  else
    echo "Warning: Local plugin not found: $plugin_path, trying OMZP::$plugin"
    zinit atclone"_fix-omz-plugin" snippet "OMZP::$plugin"
  fi
done

# ========================
# 🔄 HISTORY & COMPLETIONS
# ========================
HYPHEN_INSENSITIVE="true"      # Ignore hyphen case differences
zstyle ':omz:update' frequency 13
COMPLETION_WAITING_DOTS="true" # Show dots while waiting for completion

HIST_STAMPS="mm/dd/yyyy"
HISTSIZE=100000
SAVEHIST=100000
HISTFILE=~/.zsh_history

setopt appendhistory       # Append history instead of overwriting
setopt hist_ignore_dups    # Ignore duplicate commands
setopt hist_ignore_space   # Ignore commands starting with space

# ========================
# 🌐 LOCALE & USER CONFIG
# ========================
export LANG=en_US.UTF-8

# Autojump (if installed)
[ -f /usr/local/etc/profile.d/autojump.sh ] && . /usr/local/etc/profile.d/autojump.sh

# ========================
# ⚡ INTERACTIVE TOOLS
# ========================
if command -v fzf &>/dev/null; then
  autoload -Uz compinit && compinit
  source <(fzf --zsh)
fi

DOTFILES_DIR="$HOME/.config/dotfiles"

# Function to recursively source all .zsh and .sh files
load_dotfiles() {
  local dir="$1"

  # Loop through files and directories recursively
  find "$dir" -type f \( -name "*.sh" -o -name "*.zsh" \) | while read -r file; do
    case "$file" in
      "$DOTFILES_DIR/brew" | "$DOTFILES_DIR/install_symlinks.sh" | "$DOTFILES_DIR/setup.sh")
        continue  # Skip these files
        ;;
    esac
    [[ -r "$file" ]] && source "$file"
  done
}

# Load all dotfiles
[[ -d "$DOTFILES_DIR" ]] && load_dotfiles "$DOTFILES_DIR"

# ========================
# 📌 ALIASES
# ========================
alias zshconfig="code ~/.zshrc"
alias ohmyzsh="code ~/.oh-my-zsh"
alias reload="source ~/.zshrc"
alias brew='env PATH="${PATH//$(pyenv root)\/shims:/}" brew'
alias cd="z"
alias config='/usr/bin/git --git-dir=/Users/t0nylombardi/.cfg/ --work-tree=/Users/t0nylombardi'
